#!/bin/bash

# [OPTIONS]
# --main-class or -mc <class>       : Set main class
# --war or -w                       : Package as war
# --verbose or -v                   : Print all logs
#
# [EXIT CODES]
# 0     : Success
# 1     : Compile Error
# 2     : Invalid Argument
# 3     : Unknown Option
# 4     : Invalid Dependency

optwar=0
optverbose=0
dep_group=""
dep_artifact=""
dep_version=""

info() {
  if [ $optverbose -ne 0 ]; then
    echo "[INFO] $1"
  fi
}

error() {
  echo "[ERROR] $1" >&2
}

parse_dependency() {
  dep_group=$(xmlstarlet sel -t -v "dependency/dependencies[$1]/groupId")
  dep_artifact=$(xmlstarlet sel -t -v "dependency/dependencies[$1]/artifactId")
  dep_version=$(xmlstarlet sel -t -v "dependency/dependencies[$1]/version")
}

while [ "$1" != "" ]; do
  if [ "$1" == "--main-class" -o "$1" == "-mc" ]; then
    shift
    optmc="--main-class $1"
  elif [ "$1" == "--war" -o "$1" == "-w" ]; then
    optwar=1
  elif [ "$1" == "--verbose" -o "$1" == "-v" ]; then
    optverbose=1
  elif [[ "$1" == -* ]]; then
    echo "[ERROR] unknown option '$1'" >&2
    exit 3
  else
    module=$1
    break
  fi
  shift
done

if [ "$module" == "" ]; then
  echo "[ERROR] module name must be given." >&2
  echo "Usage: package <module>"
  exit 2
fi

info "[INFO] packaging module '$module'"

if [ $optwar -eq 0 ]; then
  info "[INFO] packaging jar"
  classpath=target/classes/$module
  root=target/classes/$module
  ext=jar
else
  info "[INFO] packaging war"
  classpath=target/webapp/$module/WEB-INF/classes
  root=target/webapp/$module
  ext=war

  webapp_dir=src/$module/webapp
  if [ ! -d $webapp_dir ]; then
    echo "[ERROR] webapp directory does not exsists." >&2
    exit 4
  fi

  mkdir -p $root
  cp -R src/$module/webapp/ $root
fi

if [ -e "dependency.xml" ]; then
  index=1

  parse_dependency $index
  while [ "$dep_group" != "" ]; do
    dep_group_path=${dep_group//.//}
    dep_dir="repository/$dep_group_path/$dep_artifact/$dep_version"
    dep_file="$dep_artifact-$dep_version.jar"
    info "dep_dir: $dep_dir"
    info "dep_file: $dep_file"

    if [ ! -e $dep_dir/$dep_file ]; then
      mkdir -p dep_dir
      download_url="https://repo1.maven.org/maven2/$dep_group_path/$dep_artifact/$dep_version/$dep_file"
      wget -o $dir/$dep_file $download_url

      if [ $? -eq 8 ]; then
        error "Dependency not found: '$download_url'"
        exit 5
      fi
    fi

    ((index++))
  done

fi

java_files=$(find src/$module/java -name *.java)
javac -d $classpath $java_files

resources_dir=src/$module/resources
if [ -d $resources_dir ]; then
  cp -R $resources_dir/ $classpath
fi

if [ $? -ne 0 ]; then
  echo "[ERROR] compilation failed." >&2
  exit 1
fi

info "[INFO] compilation completed."

jar --create --file target/$module.$ext $optmc -C $root .

info "[INFO] archiving completed."
